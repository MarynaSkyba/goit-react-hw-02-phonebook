{"version":3,"sources":["components/Contacts/ContactList.jsx","components/Contacts/ContactForm.jsx","components/Filter/Filter.jsx","components/App.js","index.js"],"names":["ContactList","contacts","onDeleteContacts","map","id","name","number","onClick","ContactForm","state","nameId","uuidv4","telId","handleNameChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","Component","Filter","App","filter","deleteContacts","contactId","prevState","contact","formSubmitHandler","find","toLowerCase","alert","newContact","changeFilter","normalizedFilter","toLocaleLowerCase","activeContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae610245.chunk.js","sourcesContent":["import React from 'react';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <p>\n          {name}:{number}\n        </p>\n        <button onClick={() => onDeleteContacts(id)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameId = uuidv4();\n  telId = uuidv4();\n\n  handleNameChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameId}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            id={this.nameId}\n            value={this.state.name}\n            onChange={this.handleNameChange}\n          />\n        </label>\n\n        <label htmlFor={this.telId}>\n          Telephone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            id={this.telId}\n            value={this.state.number}\n            onChange={this.handleNameChange}\n          />\n        </label>\n        <button type=\"submit\">Add to contacts</button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import React from 'react';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input type=\"text\" value={value} onChange={onChange}></input>\n      </label>\n    </>\n  );\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactList from './Contacts/ContactList';\nimport ContactForm from './Contacts/ContactForm';\nimport Filter from './Filter/Filter';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  formSubmitHandler = (name, number) => {\n    if (this.state.contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLocaleLowerCase();\n    const activeContacts = this.state.contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList contacts={activeContacts} onDeleteContacts={this.deleteContacts} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}